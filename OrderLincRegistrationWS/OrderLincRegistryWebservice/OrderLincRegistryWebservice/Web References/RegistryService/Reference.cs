//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace OrderLincRegistryWebservice.RegistryService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnRegisterDeviceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::OrderLincRegistryWebservice.Properties.Settings.Default.OrderLincRegistryWebservice_RegistryService_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event RegisterDeviceCompletedEventHandler RegisterDeviceCompleted;
        
        /// <remarks/>
        public event UnRegisterDeviceCompletedEventHandler UnRegisterDeviceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DTOAccount Login(string mUserName, string mPassword, string mDeviceNo) {
            object[] results = this.Invoke("Login", new object[] {
                        mUserName,
                        mPassword,
                        mDeviceNo});
            return ((DTOAccount)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string mUserName, string mPassword, string mDeviceNo) {
            this.LoginAsync(mUserName, mPassword, mDeviceNo, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string mUserName, string mPassword, string mDeviceNo, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        mUserName,
                        mPassword,
                        mDeviceNo}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RegisterDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DTOAccount RegisterDevice(string mUserName, string mPassword, string mDeviceNo) {
            object[] results = this.Invoke("RegisterDevice", new object[] {
                        mUserName,
                        mPassword,
                        mDeviceNo});
            return ((DTOAccount)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterDeviceAsync(string mUserName, string mPassword, string mDeviceNo) {
            this.RegisterDeviceAsync(mUserName, mPassword, mDeviceNo, null);
        }
        
        /// <remarks/>
        public void RegisterDeviceAsync(string mUserName, string mPassword, string mDeviceNo, object userState) {
            if ((this.RegisterDeviceOperationCompleted == null)) {
                this.RegisterDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterDeviceOperationCompleted);
            }
            this.InvokeAsync("RegisterDevice", new object[] {
                        mUserName,
                        mPassword,
                        mDeviceNo}, this.RegisterDeviceOperationCompleted, userState);
        }
        
        private void OnRegisterDeviceOperationCompleted(object arg) {
            if ((this.RegisterDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterDeviceCompleted(this, new RegisterDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnRegisterDevice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnRegisterDevice(string mUserName, string mPassword) {
            object[] results = this.Invoke("UnRegisterDevice", new object[] {
                        mUserName,
                        mPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnRegisterDeviceAsync(string mUserName, string mPassword) {
            this.UnRegisterDeviceAsync(mUserName, mPassword, null);
        }
        
        /// <remarks/>
        public void UnRegisterDeviceAsync(string mUserName, string mPassword, object userState) {
            if ((this.UnRegisterDeviceOperationCompleted == null)) {
                this.UnRegisterDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnRegisterDeviceOperationCompleted);
            }
            this.InvokeAsync("UnRegisterDevice", new object[] {
                        mUserName,
                        mPassword}, this.UnRegisterDeviceOperationCompleted, userState);
        }
        
        private void OnUnRegisterDeviceOperationCompleted(object arg) {
            if ((this.UnRegisterDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnRegisterDeviceCompleted(this, new UnRegisterDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DTOAccount {
        
        private long accountIDField;
        
        private long refIDField;
        
        private int accountTypeIDField;
        
        private int orgUnitIDField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string deviceNoField;
        
        private int roleIDField;
        
        private long addressIDField;
        
        private long contactIDField;
        
        private bool deletedField;
        
        private bool inActiveField;
        
        private bool lockoutField;
        
        private string lastIpAddressField;
        
        private System.Nullable<System.DateTime> dateLockoutField;
        
        private System.Nullable<System.DateTime> lastLoginDateField;
        
        private System.DateTime dateCreatedField;
        
        private System.DateTime dateUpdatedField;
        
        private int createdByUserIDField;
        
        private int updatedByUserIDField;
        
        private System.Nullable<System.DateTime> expiryDateField;
        
        private System.Nullable<System.DateTime> dateActivatedField;
        
        private int totalRowsField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string emailField;
        
        private string serverURLField;
        
        private string logoURLField;
        
        private string uploadImageURLField;
        
        private int serverIDField;
        
        /// <remarks/>
        public long AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public long RefID {
            get {
                return this.refIDField;
            }
            set {
                this.refIDField = value;
            }
        }
        
        /// <remarks/>
        public int AccountTypeID {
            get {
                return this.accountTypeIDField;
            }
            set {
                this.accountTypeIDField = value;
            }
        }
        
        /// <remarks/>
        public int OrgUnitID {
            get {
                return this.orgUnitIDField;
            }
            set {
                this.orgUnitIDField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string DeviceNo {
            get {
                return this.deviceNoField;
            }
            set {
                this.deviceNoField = value;
            }
        }
        
        /// <remarks/>
        public int RoleID {
            get {
                return this.roleIDField;
            }
            set {
                this.roleIDField = value;
            }
        }
        
        /// <remarks/>
        public long AddressID {
            get {
                return this.addressIDField;
            }
            set {
                this.addressIDField = value;
            }
        }
        
        /// <remarks/>
        public long ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public bool Deleted {
            get {
                return this.deletedField;
            }
            set {
                this.deletedField = value;
            }
        }
        
        /// <remarks/>
        public bool InActive {
            get {
                return this.inActiveField;
            }
            set {
                this.inActiveField = value;
            }
        }
        
        /// <remarks/>
        public bool Lockout {
            get {
                return this.lockoutField;
            }
            set {
                this.lockoutField = value;
            }
        }
        
        /// <remarks/>
        public string LastIpAddress {
            get {
                return this.lastIpAddressField;
            }
            set {
                this.lastIpAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateLockout {
            get {
                return this.dateLockoutField;
            }
            set {
                this.dateLockoutField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LastLoginDate {
            get {
                return this.lastLoginDateField;
            }
            set {
                this.lastLoginDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public int CreatedByUserID {
            get {
                return this.createdByUserIDField;
            }
            set {
                this.createdByUserIDField = value;
            }
        }
        
        /// <remarks/>
        public int UpdatedByUserID {
            get {
                return this.updatedByUserIDField;
            }
            set {
                this.updatedByUserIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateActivated {
            get {
                return this.dateActivatedField;
            }
            set {
                this.dateActivatedField = value;
            }
        }
        
        /// <remarks/>
        public int TotalRows {
            get {
                return this.totalRowsField;
            }
            set {
                this.totalRowsField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string ServerURL {
            get {
                return this.serverURLField;
            }
            set {
                this.serverURLField = value;
            }
        }
        
        /// <remarks/>
        public string LogoURL {
            get {
                return this.logoURLField;
            }
            set {
                this.logoURLField = value;
            }
        }
        
        /// <remarks/>
        public string UploadImageURL {
            get {
                return this.uploadImageURLField;
            }
            set {
                this.uploadImageURLField = value;
            }
        }
        
        /// <remarks/>
        public int ServerID {
            get {
                return this.serverIDField;
            }
            set {
                this.serverIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DTOAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DTOAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void RegisterDeviceCompletedEventHandler(object sender, RegisterDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DTOAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DTOAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UnRegisterDeviceCompletedEventHandler(object sender, UnRegisterDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnRegisterDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnRegisterDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591